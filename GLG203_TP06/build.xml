<?xml version="1.0"?>

<project name="Yaps Petstore" default="core">

    <property name="application.name" value="petstore"/>
    <property name="tp" value="06"/>

    <!-- =================================================================== -->
    <!-- Variables                                                           -->
    <!-- =================================================================== -->
    <property name="yaps.dir" value="."/>

    <!--YAPS Properties-->
    <property name="yaps.home" value="${yaps.dir}"/>
    <property name="yaps.config.dir" value="${yaps.home}/src/config"/>
    <property name="yaps.src.dir" value="${yaps.home}/src/java"/>
    <property name="yaps.test.src.dir" value="${yaps.home}/test/src"/>
    <property name="yaps.classes.dir" value="${yaps.home}/classes/production"/>
    <property name="yaps.test.classes.dir" value="${yaps.home}/classes/test"/>
    <property name="yaps.build.dir" value="${yaps.home}/build"/>
    <property name="yaps.web.dir" value="${yaps.home}/resources"/>
    <property name="yaps.web-inf.dir" value="${yaps.home}/WEB-INF"/>

    <property name="yaps.deploy.dir" value="${yaps.config.dir}/deploy"/>

    <!--Database properties-->
    <property name="db.host" value="localhost"/>
    <property name="db.sid" value="${application.name}DB"/>
    <property name="db.user" value="root"/>
    <property name="db.password" value=""/>
    <property name="db.port" value="3306"/>
    <property name="db.driver" value="com.mysql.jdbc.Driver"/>
    <property name="db.url" value="jdbc:mysql://${db.host}:${db.port}/${db.sid}"/>

    
    <!-- =================================================================== -->
    <!-- Fichiers jar, war, ...                                              -->
    <!-- =================================================================== -->
    <property name="test.jar" value="test${tp}.jar"/>
    <property name="yaps.common.jar" value="${yaps.build.dir}/common.jar"/>
    <property name="yaps.client.jar" value="${yaps.build.dir}/client.jar"/>
    <property name="yaps.server.jar" value="${yaps.build.dir}/server.jar"/>
    <property name="yaps.web.war" value="${yaps.build.dir}/petstore.war"/>


    <!-- =================================================================== -->
    <!-- Utilitaires                                                         -->
    <!-- =================================================================== -->
    <property environment="env"/>
    <property name="junit.home" value="${env.JUNIT_HOME}"/>
    <property name="junit.jar" value="${junit.home}/junit-4.4.jar"/>
    <property name="mysql.home" value="${env.MYSQL_HOME}"/>
    <property name="mysql.jar" value="${mysql.home}/lib/mysql-connector-java-5.1.21-bin.jar"/>
    <property name="tomcat.home" value="${env.TOMCAT_HOME}"/>
    <property name="servlet-api.jar" value="${tomcat.home}/lib/servlet-api.jar"/>
    <property name="tomcat.deploy.dir" value="${tomcat.home}/webapps"/>

    <property name="httpunit.home" value="${env.HTTPUNIT_HOME}"/>
    <property name="httpunit.jar" value="${httpunit.home}/lib/httpunit.jar"/>
    <property name="js.jar" value="${httpunit.home}/jars/js.jar"/>
    <property name="nekohtml.jar" value="${httpunit.home}/jars/nekohtml.jar"/>
    <property name="xercesImpl.jar" value="${httpunit.home}/jars/xercesImpl.jar"/>
    <property name="xmlParserAPIs.jar" value="${httpunit.home}/jars/xmlParserAPIs.jar"/>


    <!-- =================================================================== -->
    <!-- Check variable                                                      -->
    <!-- =================================================================== -->
    <target name="check">
        <fail unless="env.JUNIT_HOME">
            ####
            #### You must install JUnit 4.4 from http://www.junit.org/
            #### And set the JUNIT_HOME variable
        </fail>
        <fail unless="env.MYSQL_HOME">
            ####
            #### You must install MySQL Community Server 5.x from http://dev.mysql.com/downloads/
            #### Set the MYSQL_HOME variable
            #### Download the JDBC Driver for MySQL (Connector/J 5.x) from http://www.mysql.com/products/connector/
            #### Copy the file mysql-connector-java-5.x-bin.jar to the %MYSQL_HOME%\lib directory
        </fail>
        <fail unless="env.TOMCAT_HOME">
            ####
            #### You must install Tomcat 6.0 from http://tomcat.apache.org/
            #### And set the TOMCAT_HOME variable
        </fail>
        <fail unless="env.HTTPUNIT_HOME">
            ####
            #### You must install HTTPUnit 1.6.2 from http://httpunit.sourceforge.net/
            #### And set the HTTPUNIT_HOME variable
        </fail>
    </target>


    <!-- =================================================================== -->
    <!-- Classes et Jars utiliser pour compiler et tester l'application      -->
    <!-- =================================================================== -->
    <path id="classpath">
        <pathelement location="${junit.jar}"/>
        <pathelement location="${mysql.jar}"/>
        <pathelement location="${servlet-api.jar}"/>
	<!-- httpunit jars -->
        <pathelement location="${httpunit.jar}"/>
        <pathelement location="${js.jar}"/>
        <pathelement location="${nekohtml.jar}"/>
        <pathelement location="${xercesImpl.jar}"/>
        <pathelement location="${xmlParserAPIs.jar}"/>
    </path>

    <path id="yaps-classpath">
        <pathelement location="${yaps.classes.dir}"/>
        <pathelement location="${yaps.test.classes.dir}"/>
    </path>


    <!-- =================================================================== -->
    <!-- Base de donnees                                                     -->
    <!-- =================================================================== -->
    <target name="yaps-create-db">
        <sql src="${yaps.config.dir}/structure.sql"
            driver="${db.driver}"
            url="${db.url}"
            userid="${db.user}"
            password="${db.password}">
            <classpath refid="classpath"/>
        </sql>
    </target>

    <target name="yaps-insert-data">
        <sql src="${yaps.config.dir}/data.sql"
            driver="${db.driver}"
            url="${db.url}"
            userid="${db.user}"
            password="${db.password}">
            <classpath refid="classpath"/>
        </sql>
    </target>


    <!-- =================================================================== -->
    <!-- Suppression des repertoires de travail                              -->
    <!-- =================================================================== -->
    <target name="yaps-clean">
        <echo message="Cleans the Yaps environment"/>
        <delete dir="${yaps.home}/classes"/>
        <delete dir="${yaps.build.dir}"/>
    </target>


    <!-- =================================================================== -->
    <!-- Creation des repertoires de travail                                 -->
    <!-- =================================================================== -->
    <target name="yaps-prepare" depends="check">
        <echo message="Setup the Yaps environment"/>
        <mkdir dir="${yaps.classes.dir}"/>
        <mkdir dir="${yaps.test.classes.dir}"/>
        <mkdir dir="${yaps.build.dir}"/>
    </target>


    <!-- =================================================================== -->
    <!-- Compile le code source                                              -->
    <!-- =================================================================== -->
    <target name="yaps-compile" depends="yaps-prepare">
        <echo message="Compile the YAPS classes"/>
        <javac srcdir="${yaps.src.dir}"
               destdir="${yaps.classes.dir}"
               deprecation="on" nowarn="on">
            <compilerarg value="-Xlint:unchecked"/>
            <classpath refid="classpath"/>
            <classpath refid="yaps-classpath"/>
        </javac>
        <echo message="Compile the YAPS test classes"/>
        <javac srcdir="${yaps.test.src.dir}"
               destdir="${yaps.test.classes.dir}"
               deprecation="on">
            <classpath refid="classpath"/>
            <classpath refid="yaps-classpath"/>
        </javac>
    </target>

    <!-- creates RMI stubs and skeletons -->
    <target name="yaps-rmic" depends="yaps-compile">
        <echo message="Creates RMI stubs and skeletons"/>
        <rmic classname="com.yaps.petstore.server.service.catalog.CatalogService" base="${yaps.classes.dir}"/>
        <rmic classname="com.yaps.petstore.server.service.customer.CustomerService" base="${yaps.classes.dir}"/>
        <rmic classname="com.yaps.petstore.server.service.order.OrderService" base="${yaps.classes.dir}"/>
    </target>

    <!-- =================================================================== -->
    <!-- Package les fichiers dans des archives                              -->
    <!-- =================================================================== -->
    <target name="yaps-build" depends="yaps-compile,yaps-rmic,yaps-build-common-jar,yaps-build-client-jar,yaps-build-server-jar,yaps-war"/>

    <target name="yaps-build-common-jar">
        <echo message="Creates the PetStore Customer jar"/>
        <jar jarfile="${yaps.common.jar}">
            <fileset dir="${yaps.classes.dir}">
                <include name="com/yaps/petstore/common/**/*.class"/>
            </fileset>
        </jar>
    </target>

    <target name="yaps-build-client-jar">
        <echo message="Creates the PetStore Client Application"/>
        <jar jarfile="${yaps.client.jar}">
            <fileset dir="${yaps.classes.dir}">
                <include name="com/yaps/petstore/client/**/*.class"/>
                <include name="com/yaps/petstore/server/service/**/*Stub.class"/>
                <include name="com/yaps/petstore/server/service/**/*Remote.class"/>
            </fileset>
        </jar>
    </target>
    <target name="yaps-build-server-jar">
        <echo message="Creates the PetStore Server Application"/>
        <jar jarfile="${yaps.server.jar}">
            <fileset dir="${yaps.classes.dir}">
                <include name="com/yaps/petstore/server/**/*.class"/>
            </fileset>
        </jar>
    </target>

    <!-- Creates the webapp war file -->
    <target name="yaps-war" depends="yaps-rmic">
        <mkdir dir="${yaps.build.dir}"/>
        <echo message="Creates the PetStore Web Application"/>
        <war destfile="${yaps.web.war}" webxml="${yaps.web-inf.dir}/web.xml">
            <fileset dir="${yaps.web.dir}">
                <include name="**/*.html"/>
                <include name="**/*.jsp"/>
                <include name="**/*.gif"/>
                <include name="**/*.jpg"/>
                <include name="**/*.css"/>
            </fileset>
            <classes dir="${yaps.classes.dir}">
                <include name="com/yaps/petstore/web/**/*.class"/>
                <include name="com/yaps/petstore/server/service/customer/*Stub.class"/>
                <include name="com/yaps/petstore/server/service/customer/*Remote.class"/>
                <include name="com/yaps/petstore/common/**/*.class"/>
            </classes>
        </war>
    </target>

    <!-- =================================================================== -->
    <!-- Run                                                                -->
    <!-- =================================================================== -->
    <target name="yaps-deploy" depends="yaps-war">
        <copy file="${yaps.web.war}" todir="${tomcat.deploy.dir}"/>
    </target>

	
    <!-- =================================================================== -->
    <!-- Run                                                                -->
    <!-- =================================================================== -->
    <target name="yaps-run-client" depends="yaps-build">
        <echo message="Runs the application"/>
        <java classname="com.yaps.petstore.client.ui.Menu" fork="yes">
            <classpath location="${yaps.client.jar}"/>
            <classpath location="${yaps.common.jar}"/>
        </java>
    </target>


    <!-- =================================================================== -->
    <!-- Test                                                                -->
    <!-- =================================================================== -->
    <target name="yaps-test" depends="check, yaps-compile">
        <echo message="Tests the application"/>
        <junit printsummary="on" fork="yes">
            <classpath refid="classpath"/>
            <classpath refid="yaps-classpath"/>
            <formatter type="plain" usefile="false"/>
            <test name="AllTests"/>
        </junit>
    </target>


    <!-- =================================================================== -->
    <!-- Construction de l'archive des sources a remettte                    -->
    <!-- =================================================================== -->
    <target name="yaps_zip_src" depends="">
        <zip destfile="tp${tp}src.zip">
            <fileset dir=".">
                <includesfile name="missingFiles.txt"/> 
            </fileset>
        </zip>
    </target>

    <!-- =================================================================== -->
    <!-- Corriger                                                            -->
    <!-- =================================================================== -->
    <target name="yaps-mark" depends="yaps-compile, yaps_zip_src">
        <echo message="Marks the application"/>
        <java classname="Tests" fork="yes">
            <sysproperty key="fichierScenario" value="TP${tp}.test"/>
            <classpath location="${test.jar}"/>
            <classpath refid="classpath"/>
            <classpath refid="yaps-classpath"/>
        </java>
    </target>


    <!-- =================================================================== -->
    <!-- Main                                                                -->
    <!-- =================================================================== -->
    <target name="core" depends="yaps-clean,yaps-compile,yaps-build"/>

</project>
