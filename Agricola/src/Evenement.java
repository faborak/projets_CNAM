/*******************************************************************/** Role du fichier   : Cartes envenements/** 					Genere un tableau aleatoire d evenements et une transcodification/**						des evenements pour leur appel normal sur PJeD/** Auteur            : Fabrice Lecomte        					/** Date de creation  : 09/04/2014  /**     Modifications :        					/*********************************************************************/public class Evenement {	//références croiséespublic Agricola jeu;public PlateauJeuD PJeD;public PlateauJoueurD PJoD;public PlateauRessourcesD PReD;public PionJoueur Pion;public PlateauJeu PJe;// Evenements avant transcodificationString evenement[] = new String[15];{evenement[1] = "Clotures";evenement[2] = "Moutons";evenement[3] = "Amenagement";evenement[4] = "Semailles";evenement[5] = "Renovations";evenement[6] = "Pierre1";evenement[7] = "Naissance";evenement[8] = "Sangliers";evenement[9] = "1 legume";evenement[10] = "Boeufs";evenement[11] = "Pierre2";evenement[12] = "Labourage/Semailles";evenement[13] = "Naissance 2";evenement[14] = "Renov et clotures";} int transodification[] = new int[15];public Evenement(Agricola je, PlateauJeuD PJeD) { 	this.PJeD = PJeD;	this.jeu = je;// Mise en place d'un random sur ces evenements	int tRandom[] = new int[15];// Période 1 va de 1 à 4	int lower = 1;	int higher = 4;	higher++;	for (int i=1; i<5;i++){		boolean RandomOk = false;		while (RandomOk == false) {		   boolean tRandomKO = false ;				int random = (int)(Math.random() * (higher-lower)) + lower;		    for (int j=1; j<5; j++){		        if (tRandom[j] == random) { tRandomKO = true;}  				    }			// si absent de table random		    if (tRandomKO == false) {			transodification[i] = random;			tRandom[i]=random;			RandomOk = true;			} 	    }	 }// période 2 va de 5 à 7	lower = 5;	higher = 7;	higher++;	for (int i=5; i<8;i++){		boolean RandomOk = false;		while (RandomOk == false) {		   boolean tRandomKO = false ;				int random = (int)(Math.random() * (higher-lower)) + lower;		    for (int j=5; j<8; j++){		        if (tRandom[j] == random) { tRandomKO = true;}  				    }			// si absent de table random		    if (tRandomKO == false) {			transodification[i] = random;			tRandom[i]=random;			RandomOk = true;			} 	    }	 }// période 3 va de 8 à 9		lower = 8;		higher = 9;		higher++;		int random = (int)(Math.random() * (higher-lower)) + lower;		transodification[8] = random;		if (transodification[8] == 8){transodification[9]=9;}		else {transodification[9]=8;}// période 4 va de 10 à 11 		lower = 10;		higher = 11;		higher++;		random = (int)(Math.random() * (higher-lower)) + lower;		transodification[10] = random;		if (transodification[10] == 10){transodification[11]=11;}		else {transodification[11]=10;}// période 5 va de 12 à 13			lower = 12;		higher = 13;		higher++;		random = (int)(Math.random() * (higher-lower)) + lower;		transodification[12] = random;		if (transodification[12] == 12){transodification[13]=13;}		else {transodification[13]=12;}// période 6 est forcément 14 		transodification[14]=14;		// Mise à jour des libellés sur PJeD, qui les envoie tour après tour sur PJe		for (int i=1;i<15;i++){			PJeD.LibelleEvenements[i] = evenement[transodification[i]];			PJeD.texte[12] = PJeD.LibelleEvenements[1];			if (PJeD.LibelleEvenements[1]=="Moutons") {PJeD.Mouton = 1;PJeD.LibelleEvenements[1]="Moutons : 1";PJeD.ApparitionMouton=true;PJeD.TourApparitionMoutons=1;}			PJeD.nouveau();		    }}public void evenement1(){// GestionActionJe renvoie sur cette méthode quand clic sur évènement 1	switch (transodification[1]){	case 1 : PJeD.clotures(4, 3, 1);	break;	case 2 : PJeD.import_animaux(4, 3, 1);	break;	case 3 : PJeD.amenagement(4, 3);	break;	case 4 : PJeD.Semailles(4, 3);	break;	}}//GestionActionJe renvoie sur cette méthode quand clic sur évènement 2, etcpublic void evenement2(){	switch (transodification[2]){	case 1 : PJeD.clotures(5, 1, 1);	break;	case 2 : PJeD.import_animaux(5, 1, 1);	break;	case 3 : PJeD.amenagement(5, 1);	break;	case 4 : PJeD.Semailles(5, 1);	break;	}}public void evenement3(){	switch (transodification[3]){	case 1 : PJeD.clotures(5, 2, 1);	break;	case 2 : PJeD.import_animaux(5, 2, 1);	break;	case 3 : PJeD.amenagement(5, 2);	break;	case 4 : PJeD.Semailles(5, 2);	break;	}	}public void evenement4(){	switch (transodification[4]){	case 1 : PJeD.clotures(5, 3, 1);	break;	case 2 : PJeD.import_animaux(5, 3, 1);	break;	case 3 : PJeD.amenagement(5, 3);	break;	case 4 : PJeD.Semailles(5, 3);	break;	}}// Période 2public void evenement5(){	switch (transodification[5]){	case 5 : PJeD.Renovations(6, 1, 1);	break;	case 6 : PJeD.Collecte(6, 1, 4);	break;	case 7 : PJeD.Naissance(6, 1, 1); // coordonnée x, y, Naissance normale	break;	}}public void evenement6(){	switch (transodification[6]){	case 5 : PJeD.Renovations(6, 2, 1);	break;	case 6 : PJeD.Collecte(6, 2, 4);	break;	case 7 : PJeD.Naissance(6, 2, 1);  // coordonnée x, y, Naissance normale	break;	}}public void evenement7(){	switch (transodification[7]){	case 5 : PJeD.Renovations(6, 3, 1);	break;	case 6 : PJeD.Collecte(6, 3, 4);	break;	case 7 : PJeD.Naissance(6, 3, 1);  // coordonnée x, y, Naissance normale	break;	}}// Période 3public void evenement8(){	switch (transodification[8]){	case 8 : PJeD.import_animaux(7, 2, 2);	break;	case 9 : PJeD.Cereale_Legume(7, 2, 6); // appartion du cas legume	break;	}}public void evenement9(){	switch (transodification[9]){	case 8 : PJeD.import_animaux(7, 3, 2);	break;	case 9 : PJeD.Cereale_Legume(7, 3, 6); // apparition du cas legume	break;	}}// Période 4public void evenement10(){	switch (transodification[10]){	case 10 : PJeD.import_animaux(8, 2, 3);	break;	case 11 : PJeD.Collecte(8, 2, 12);System.out.println("transfo 10"+transodification[10]);	break;	}}public void evenement11(){	switch (transodification[11]){	case 10 : PJeD.import_animaux(8, 3, 3);	break;	case 11 : PJeD.Collecte(8, 3, 12);	break;	}}//Période 5public void evenement12(){	switch (transodification[12]){	case 12 : PJeD.Labourage(9, 2, 2);	break;	case 13 : PJeD.Naissance(9, 2, 2);	break;	}}public void evenement13(){	switch (transodification[13]){	case 12 : PJeD.Labourage(9, 3, 2);	break;	case 13 : PJeD.Naissance(9, 3, 2);	break;	}}//Période 6public void evenement14(){	PJeD.Renovations(10, 2, 2);}}