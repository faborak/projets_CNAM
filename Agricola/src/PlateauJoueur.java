import java.awt.*;/*******************************************************************/** Role du fichier   : Dessiner mathematiquement l'objet PlateauJoueur/** Ateur             : Fabrice Lecomte        					/** Date de creation  : 29/04/2014  /**     Modifications : 17/05/2014 ajout des differents animaux       					/*********************************************************************/class PlateauJoueur extends Panel {private static final long serialVersionUID = 1L;private final Color casevide = new Color( 100, 200, 100 );private final Color maisonbois = new Color( 80, 50, 10 );private final Color maisonargile = new Color( 150, 50, 50 );private final Color maisonpierre = new Color( 110, 110, 110 );private final Color champ = new Color( 80, 70, 40 );private final Color paturage = new Color( 0, 150, 50 );private final Color CouleurJoueur = new Color( 0, 0, 0 );private final Color Cereale = new Color( 252, 220, 0 );private final Color Legume = new Color( 204, 85, 0 );private final Color Mouton = new Color( 251, 252, 250 );private final Color Sanglier = new Color( 47, 27, 12 );private final Color Boeuf = new Color( 135, 89, 26 );private final Color Barriere = new Color(153,81,43); // Couleur Feuille-morteprivate int Pointx;private int Pointy;private int nbpionstour;private boolean PlateauJeuPion[][];//int Plateau[][]  = new int[6][4];  // plateau de 5 cases sur 3int Plateau[][];//nombre de champ laboures, rien, cereale ou legume (0, 1 et 2), nombre de ressource en attenteint[][] Champ = new int[1][1]; public PlateauJoueur (int p[][], boolean plateaujeupion[][], int pt){	Plateau = p;	PlateauJeuPion = plateaujeupion;	nbpionstour = pt;}public void dessine(Graphics g) {	// En fonction de la valeur de plateau, on fait une maison en bois, argile, pierre// un champ ou un paturage// 1 bois, 2 argile, 3 pierre, 4 champ, 5 paturagefor (int i = 1; i < 6; i++) {for (int j = 1; j < 4; j++) {Pointx = (i-1)*55;if (Pointx == 0) { Pointx = 1;}Pointy = (j-1)*55;if (Pointy == 0) { Pointy = 1;}switch(Plateau[i][j]) {case 0 : new Rectangle(Pointx, Pointy, 50, 50, g, casevide);break;case 1 : new Rectangle(Pointx, Pointy, 50, 50, g, maisonbois);break;case 2 : new Rectangle(Pointx, Pointy, 50, 50, g, maisonargile);break;case 3 : new Rectangle(Pointx, Pointy, 50, 50, g, maisonpierre);break;case 4 : // Champ videnew Rectangle(Pointx, Pointy, 50, 50, g, champ);break;case 5 : // Paturage videnew Rectangle(Pointx, Pointy, 50, 50, g, paturage);g.setColor(Barriere);g.drawRoundRect(Pointx, Pointy, 50, 50, 40, 20); break;case 6 :  // 3 cereales dans le champ	new Rectangle(Pointx, Pointy, 50, 50, g, champ);	new Cercle(Pointx+15, Pointy+15, 20, g, Cereale);	g.setColor(Color.black);	String texte = "3";	g.drawString(texte, Pointx+20, Pointy+25) ; 	break;case 7 :  // 2 cereales dans le champ	new Rectangle(Pointx, Pointy, 50, 50, g, champ);	new Cercle(Pointx+15, Pointy+15, 20, g, Cereale);	g.setColor(Color.black);	texte = "2";	g.drawString(texte, Pointx+20, Pointy+25) ; 	break;case 8 :  // 1 cereale dans le champ	new Rectangle(Pointx, Pointy, 50, 50, g, champ);	new Cercle(Pointx+15, Pointy+15, 20, g, Cereale);	g.setColor(Color.black);	texte = "1";	g.drawString(texte, Pointx+20, Pointy+25) ; 	break;case 9 : // 2 legumes dans le champ	new Rectangle(Pointx, Pointy, 50, 50, g, champ);	new Cercle(Pointx+15, Pointy+15, 20, g, Legume);	g.setColor(Color.black);	texte = "2";	g.drawString(texte, Pointx+20, Pointy+25) ; 	break;case 10 : // 1 legume dans le champ	new Rectangle(Pointx, Pointy, 50, 50, g, champ);	new Cercle(Pointx+15, Pointy+15, 20, g, Legume);	g.setColor(Color.black);	texte = "1";	g.drawString(texte, Pointx+20, Pointy+25) ; 	break;case 11 : // 1 mouton dans le champ	new Rectangle(Pointx, Pointy, 50, 50, g, paturage);	new Cercle(Pointx+5, Pointy+30, 20, g, Mouton);	g.setColor(Barriere);	g.drawRoundRect(Pointx, Pointy, 50, 50, 40, 20); 	break;case 12 : // 2 moutons dans le champ	new Rectangle(Pointx, Pointy, 50, 50, g, paturage);	new Cercle(Pointx+5, Pointy+30, 20, g, Mouton);	new Cercle(Pointx+35, Pointy+30, 20, g, Mouton);	g.setColor(Barriere);	g.drawRoundRect(Pointx, Pointy, 50, 50, 40, 20); 	break;case 13 : // 1 sanglier dans le champ	new Rectangle(Pointx, Pointy, 50, 50, g, paturage);	new Cercle(Pointx+5, Pointy+30, 20, g, Sanglier);	g.setColor(Barriere);	g.drawRoundRect(Pointx, Pointy, 50, 50, 40, 20); 	break;case 14 : // 2 sangliers dans le champ	new Rectangle(Pointx, Pointy, 50, 50, g, paturage);	new Cercle(Pointx+5, Pointy+30, 20, g, Sanglier);	new Cercle(Pointx+35, Pointy+30, 20, g, Sanglier);	g.setColor(Barriere);	g.drawRoundRect(Pointx, Pointy, 50, 50, 40, 20); 	break;case 15 : // 1 boeuf dans le champ	new Rectangle(Pointx, Pointy, 50, 50, g, paturage);	new Cercle(Pointx+5, Pointy+30, 20, g, Boeuf);	g.setColor(Barriere);	g.drawRoundRect(Pointx, Pointy, 50, 50, 40, 20); 	break;case 16 : // 2 boeufs dans le champ	new Rectangle(Pointx, Pointy, 50, 50, g, paturage);	new Cercle(Pointx+5, Pointy+30, 20, g, Boeuf);	new Cercle(Pointx+35, Pointy+30, 20, g, Boeuf);	g.setColor(Barriere);	g.drawRoundRect(Pointx, Pointy, 50, 50, 40, 20); 	break;}}}// On dessine les pions a  jouer pour le tour//Deuxième partie de dessine : les pions a afficher sur le plateau//affiche un pion sur le plateau en fonction de plateaupionfor (int i=1; i < 6; i++) {for(int j=1;j<4;j++){if (PlateauJeuPion[i][j] == true){	int pointxcercle = ((i-1)*55)+10; 	int pointycercle = ((j-1)*55)+10; 	new Cercle(pointxcercle, pointycercle, 30, g, CouleurJoueur);	}}}}}